{"ast":null,"code":"// Base URL for Spring Boot backend\nconst API_URL = \"http://localhost:8080/api/auth\";\nexport async function registerUser(email, password, role = 'Voter') {\n  const res = await fetch(`${API_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password,\n      role\n    })\n  });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.message || 'Registration failed');\n  return data;\n}\nexport async function loginUser(email, password) {\n  const res = await fetch(`${API_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  const data = await res.json();\n  if (!res.ok) throw new Error(data.message || 'Login failed');\n  return data;\n}","map":{"version":3,"names":["API_URL","registerUser","email","password","role","res","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","loginUser"],"sources":["C:/xampp/htdocs/e-voting-blockchain-app/frontend/src/api.js"],"sourcesContent":["// Base URL for Spring Boot backend\r\nconst API_URL = \"http://localhost:8080/api/auth\";\r\n\r\nexport async function registerUser(email, password, role = 'Voter') {\r\n  const res = await fetch(`${API_URL}/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ email, password, role })\r\n  });\r\n  const data = await res.json();\r\n  if (!res.ok) throw new Error(data.message || 'Registration failed');\r\n  return data;\r\n}\r\n\r\nexport async function loginUser(email, password) {\r\n  const res = await fetch(`${API_URL}/login`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ email, password })\r\n  });\r\n  const data = await res.json();\r\n  if (!res.ok) throw new Error(data.message || 'Login failed');\r\n  return data;\r\n}\r\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,gCAAgC;AAEhD,OAAO,eAAeC,YAAYA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,GAAG,OAAO,EAAE;EAClE,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,WAAW,EAAE;IAC7CO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAET,KAAK;MAAEC,QAAQ;MAAEC;IAAK,CAAC;EAChD,CAAC,CAAC;EACF,MAAMQ,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;EAC7B,IAAI,CAACR,GAAG,CAACS,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,qBAAqB,CAAC;EACnE,OAAOJ,IAAI;AACb;AAEA,OAAO,eAAeK,SAASA,CAACf,KAAK,EAAEC,QAAQ,EAAE;EAC/C,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,QAAQ,EAAE;IAC1CO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAET,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;EACF,MAAMS,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;EAC7B,IAAI,CAACR,GAAG,CAACS,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,cAAc,CAAC;EAC5D,OAAOJ,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}